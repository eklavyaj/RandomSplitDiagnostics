% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diagnose.R
\name{diagnose}
\alias{diagnose}
\title{Diagnose the random split}
\usage{
diagnose(
  dataset.name,
  df.train,
  df.test,
  model.relation = "",
  metric.performance = "Normalized AIC",
  num.simulations = 200,
  alpha = 0.05,
  save.plots = TRUE,
  output.dir = "Output"
)
}
\arguments{
\item{dataset.name}{Name of the Dataset (String)}

\item{df.train}{Train Partition (R DataFrame)}

\item{df.test}{Test Partition (R DataFrame)}

\item{output.dir}{}
}
\value{

}
\description{
Diagnose the random split
}
\examples{

# ------------------------- Example 1 ------------------------------
# set.seed(19) # accepted
# set.seed(20) # rejected
# data preparation
dataset.name <- "Abalone"
data(abalone)
split.percentage <- 0.8

# intial random split of data
s <- sample(x = 1:nrow(abalone), size = floor(nrow(abalone)*split.percentage), replace = F)
df.train <- abalone[s, ]
df.test <- abalone[-s, ]

# defining model relation based on variables of data
model.relation <- WholeWeight ~ Height + LongestShell + Diameter

# function call
diagnose(dataset.name, df.train, df.test, model.relation = model.relation,
 metric.performance = "Normalized AIC", num.simulations = 200,
  alpha = 0.05, save.plots = TRUE, output.dir = "Output")

# ------------------------- Example 2 ------------------------------

# data preparation
dataset.name <- "Diamonds"
data(diamonds)
split.percentage <- 0.8

# intial random split of data
s <- sample(x = 1:nrow(diamonds), size = floor(nrow(diamonds)*split.percentage), replace = F)
df.train <- diamonds[s, ]
df.test <- diamonds[-s, ]

# defining model relation based on variables of data
model.relation <- price ~ x:y:z + depth

# function call
diagnose(dataset.name, df.train, df.test, model.relation = model.relation,
 metric.performance = "Normalized AIC", num.simulations = 200,
  alpha = 0.05, save.plots = TRUE, output.dir = "Output")

}
